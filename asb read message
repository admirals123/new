OK, here's the modified CronJob configuration to delete a specific PipelineRun after 1 minute:
apiVersion: batch/v1
kind: CronJob
metadata:
  name: pipelinerun-cleanup
spec:
  schedule: "* * * * *" # Run every minute
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cleanup
            image: bitnami/kubectl 
            args:
            - delete
            - pipelinerun
            - "<PIPELINERUN_NAME>" # Replace with the actual PipelineRun name
            - --field-selector=metadata.creationTimestamp<$(date -d '1 minute ago' +%Y-%m-%dT%H:%M:%SZ)
          restartPolicy: OnFailure

Key Changes:
 * Schedule: Changed to "* * * * *" to run the job every minute.
 * Args:
   * Removed --all since you're targeting a single PipelineRun.
   * Added <PIPELINERUN_NAME> as a placeholder. Replace this with the actual name of the PipelineRun you want to delete.
   * Modified the date command to calculate 1 minute ago.
How to Use:
 * Replace Placeholder: Edit the file, replacing <PIPELINERUN_NAME> with the correct name.
 * Apply (If New): If you haven't created the CronJob before, use kubectl apply -f pipelinerun-cleanup.yaml.
 * Update (If Existing): If you're modifying an existing CronJob, use kubectl apply -f pipelinerun-cleanup.yaml again to update it.
