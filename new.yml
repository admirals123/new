FROM ubuntu:20.04
RUN apt-get update && apt-get install -y curl gnupg
RUN curl [6](https://www.docker.com/blog/how-to-use-the-redis-docker-official-image/) | apt-key add -
RUN echo "deb [7](https://www.docker.com/blog/how-to-use-the-redis-docker-official-image/) $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/redis.list
RUN apt-get update && apt-get install -y redis=7.0.5-1~focal1
EXPOSE 6379
CMD ["redis-server"]




import redis

# Azure Redis Cache details
hostname = 'your-azure-redis-cache-name.redis.cache.windows.net'  # Replace with your hostname
port = 6380  # Default SSL port for Azure Redis Cache
password = 'your-access-key'  # Replace with your primary or secondary access key

# Connect to Azure Redis Cache
# Note: SSL connection is required for Azure Redis Cache
r = redis.Redis(host=hostname, port=port, password=password, ssl=True, ssl_cert_reqs=None)

# Example operations
# Set a key
r.set('mykey', 'Hello from Azure Redis Cache!')

# Retrieve the value of a key
value = r.get('mykey')
print(f"The value of 'mykey' is: {value.decode('utf-8')}")



# Use an official Python runtime as a parent image
FROM python:3.8-slim

# Set the working directory in the container
WORKDIR /usr/src/app

# Copy the current directory contents into the container at /usr/src/app
COPY . .

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Run app.py when the container launches
CMD ["python", "./app.py"]




import redis

# Connect to the Redis cache
redis_host = "<your_cache_name>.redis.cache.windows.net"
redis_password = "<your_primary_key>"
redis_port = "<your_ssl_port>"

r = redis.StrictRedis(host=redis_host, port=redis_port, password=redis_password, ssl=True)

# Set a test value in Redis
r.set('test', 'Hello, Redis!')

# Retrieve and print the value
print(r.get('test').decode("utf-8"))