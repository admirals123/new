using System;
using System.Threading.Tasks;
using Azure.Identity;
using Azure.Messaging.ServiceBus;

namespace ServiceBusManagedIdentityDemo
{
    class Program
    {
        // The Service Bus namespace connection string
        private static readonly string ServiceBusNamespace = "<your-service-bus-namespace>.servicebus.windows.net";
        // The Service Bus queue name
        private static readonly string QueueName = "<your-queue-name>";

        static async Task Main(string[] args)
        {
            // Create a ServiceBusClient that will authenticate through Managed Identity
            var client = new ServiceBusClient(ServiceBusNamespace, new DefaultAzureCredential());

            // Create a sender for the queue
            ServiceBusSender sender = client.CreateSender(QueueName);

            // Create a message that we can send
            ServiceBusMessage message = new ServiceBusMessage("Hello, Service Bus!");

            // Send the message
            await sender.SendMessageAsync(message);
            Console.WriteLine($"Sent a single message to the queue: {QueueName}");

            // Create a receiver that we can use to receive the message
            ServiceBusReceiver receiver = client.CreateReceiver(QueueName);

            // Receive the message
            ServiceBusReceivedMessage receivedMessage = await receiver.ReceiveMessageAsync();
            string body = receivedMessage.Body.ToString();
            Console.WriteLine($"Received: {body}");

            // Close the sender, receiver, and client
            await sender.DisposeAsync();
            await receiver.DisposeAsync();
            await client.DisposeAsync();
        }
    }
}
