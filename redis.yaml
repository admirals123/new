using Microsoft.Azure.ServiceBus;
using Microsoft.Azure.Services.AppAuthentication;
using System;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        // Placeholder connection string
        string serviceBusNamespaceConnectionString = "Endpoint=sb://your-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=your-access-key";

        try
        {
            // Get an access token using AzureServiceTokenProvider
            var azureServiceTokenProvider = new AzureServiceTokenProvider();
            var token = await azureServiceTokenProvider.GetAccessTokenAsync("https://servicebus.azure.net");

            // Get the Azure AD tenant ID
            string authority = azureServiceTokenProvider.TenantId != null ?
                $"https://login.microsoftonline.com/{azureServiceTokenProvider.TenantId}" :
                null;

            // Create a token provider based on the acquired token
            var tokenProvider = TokenProvider.CreateAzureActiveDirectoryTokenProvider(async (audience, auth, state) =>
            {
                return token;
            }, authority);

            // Create a ServiceBusClient instance using the token provider
            var serviceBusClient = new ServiceBusClient(serviceBusNamespaceConnectionString, tokenProvider);

            // Create a ServiceBusSender instance
            var sender = serviceBusClient.CreateSender("your-queue-name");

            // Create a message and send it to the queue
            var message = new Message(System.Text.Encoding.UTF8.GetBytes("Hello, Azure Service Bus!"));
            await sender.SendAsync(message);

            Console.WriteLine("Message sent successfully.");

            // Close the ServiceBusClient
            await serviceBusClient.DisposeAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}
